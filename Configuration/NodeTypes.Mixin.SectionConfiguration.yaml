'CodeQ.JumpMarkers:Mixin.SectionConfiguration':
  abstract: true
  ui:
    inspector:
      groups:
        jumpmarker:
          label: i18n
          icon: anchor
          position: 950
      views:
        anchor:
          label: 'Anchor view'
          group: jumpmarker
          view: 'CodeQ.JumpMarkers/Views/AnchorView'
  properties:
    jumpMarkerTitle:
      type: string
      defaultValue: ''
      ui:
        label: i18n
        help:
          message: i18n
        reloadPageIfChanged: true
        inspector:
          group: jumpmarker
          position: 'before sectionId'
    sectionId:
      type: string
      ui:
        reloadIfChanged: true
        label: i18n
        inspector:
          group: jumpmarker
          editor: 'CodeQ.JumpMarkers/Inspector/Editors/SegmentIdEditor'
          editorOptions:
            sectionId: "ClientEval:node.properties.jumpMarkerTitle"
            # Implements the most common subset of CodeQ.JumpMarkers:Integration.Helper.NodeAnchorId,
            # fully implementing Carbon.String.urlize(value) would bloat the code too much
            placeholder: "ClientEval: (node.properties.jumpMarkerTitle || '').replace('&nbsp;', '-').replace(/<[^>]*>/g, ' ').substr(0, 100).trim().toLowerCase().replaceAll('ä', 'ae').replaceAll('ü', 'ue').replaceAll('ö', 'oe').replaceAll('ß', 'ss').replace(/[^A-Za-z0-9\/]+/g, '-').trim().replace(/^.*?([a-z].*)$/, /*remove non-alpha chars from start*/ '$1').replace(/(.*)-$/, /*remove dashes from end*/ '$1')"
        help:
          message: i18n
      validation:
        'Neos.Neos/Validation/StringLengthValidator':
          minimum: 1
          maximum: 255
        'Neos.Neos/Validation/RegularExpressionValidator':
          regularExpression: '/^[a-z][a-z0-9\-]*$/i'
